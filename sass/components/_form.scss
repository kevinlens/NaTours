.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    font-family: inherit;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rbga($color-white, 0.5);
    border: none;
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;

    transition: all 0.3s;

    &:focus {
      outline: none;
      //x direction, x direction, y direction, and amount of blur
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;
    }

    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    &:invalid {
      box-shadow: none;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;

    //enable SMOOTH transform transition within .3s
    transition: all 0.3s;
  }

  // if the input's placeholder is shown(text has not been inputted) then do changes to the label
  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;

    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block;
  }

  &__radio-input {
    display: none;
  }
  
  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    padding-left: 4.5rem;

    /* it is important to set the position to relative because so that other elements will reference to this paraent element(know where to begin positioning aka starting point) */
    position: relative;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;

    //The position will now be relative to the PARENT block container ('radio-label')
    position: absolute;

    top: -0.4rem;
    left: 0rem;

    //the psuedo element inner circle of the radio button
    &::after {
      content: '';
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      background-color: $color-primary;

      //The position will now be relative to the PARENT block container ('radio-button' which doesn't actually need the position to be 'relative' it can be 'absolute' as well)
      position: absolute;

      top: 50%;
      left: 50%;
      /* this makes it so that the element is actually shifted 50% to the top and left(meaning the center of the element is actually the center) */
      /* if you didn't do this, by default the left side of this element would be considered to be the center */
      transform: translate(-50%, -50%);

      opacity: 0;
      //enable smooth transition for opacity
      transition: opacity 0.2s;
    }
  }

  //if the radio input button is checked, then add features to the psuedo element button inside of the radio-label
  &__radio-input:checked + &__radio-label &__radio-button::after {
    opacity: 1;
  }
}
